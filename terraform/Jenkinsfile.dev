pipeline {
    parameters {
        booleanParam(name: 'autoApprove', defaultValue: false, description: 'Automatically run apply after generating plan?')
    } 
    environment {
        AWS_ACCESS_KEY_ID     = credentials('AKIAQY545ZB44DLHNPHL')
        AWS_SECRET_ACCESS_KEY = credentials('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')
    }

    agent any
    stages {
        stage('Debug') {
            steps {
                script {
                    echo '--- Debug Information ---'
                    echo "Current directory: ${pwd()}"
                    echo 'Listing contents of the workspace:'
                    sh 'ls -al'

                    echo '--- Git Debug Information ---'
                    sh 'git branch -a'
                    sh 'git remote -v'

                    echo '--- Checkout Step ---'
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: 'master']],
                        userRemoteConfigs: [[url: 'https://github.com/AlfredoOR14/proyecto-terraform.git']]
                    ])
                }
            }
        }

        stage('Plan') {
            steps {
                sh 'cd terraform/ ; terraform init'
                sh 'cd terraform/ ; terraform plan -out tfplan'
                sh 'cd terraform/ ; terraform show -no-color tfplan > tfplan.txt'
            }
        }

        stage('Approval') {
            when {
                not {
                    equals expected: true, actual: params.autoApprove
                }
            }

            steps {
                script {
                    def plan = readFile 'terraform/tfplan.txt'
                    input message: "Do you want to apply the plan?",
                    parameters: [text(name: 'Plan', description: 'Please review the plan', defaultValue: plan)]
                }
            }
        }

        stage('Apply') {
            steps {
                sh 'cd terraform/ ; terraform apply -input=false tfplan'
            }
        }
    }
}

